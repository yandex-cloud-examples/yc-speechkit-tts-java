syntax = "proto3";

package speechkit.tts.v3;

import "speechkit/v3/common.proto";

option go_package = "a.yandex-team.ru/voicetech/asr/cloud_engine/api/speechkit/v3/proto/tts;speech_kit";
option java_package = "syandex.cloud.api.ai.tts.v3";

message TextVariable {
  string variable_name = 1;
  // The text of the variable to be synthesized instead of the template.
  string variable_value = 2;
}

message AudioVariable {
  string variable_name = 1;
  int64 variable_start_ms = 2;
  int64 variable_length_ms = 3;
}

message UtteranceSynthesisResponse {
  // Part of synthesized audio.
  speechkit.v3.AudioChunk audio_chunk = 1;
}

message AudioTemplate {
  speechkit.v3.AudioContent audio = 1;
  TextTemplate text_template = 2;
  repeated AudioVariable variables = 3;
}

message TextTemplate {
  // hello, {user}
  string text_template = 1;
  //{user: Adam}
  repeated TextVariable variables = 2;
}


message Hints {
  // The hint for specifying the voice that need to synthesize in the audio.
  oneof Hint {
    string voice = 1;
    AudioTemplate audio_template = 2;
    double speed = 3;
    double volume = 4;
    string role = 5;
  }
}

message UtteranceSynthesisRequest {
  enum LoudnessNormalizationType {
    LOUDNESS_NORMALIZATION_TYPE_UNSPECIFIED = 0;
    MAX_PEAK = 1;
    LUFS = 2;
  }
  string model = 1;
  // Text to synthesis, one of for advanced mark up in future
  oneof Utterance {
    string text = 2;
    TextTemplate text_template = 3;
  }
  // Optional hints for synthesis.
  repeated Hints hints = 4;
  // Optional. Default: 22050 Hz, linear 16-bit signed little-endian pcm
  speechkit.v3.AudioFormatOptions output_audio_spec = 5;
  LoudnessNormalizationType loudness_normalization_type = 6;
  // Optional. Automatically split long text to several utterances and bill accordingly. Some degradation in service quality is possible.
  bool unsafe_mode = 7;
}
